---
openapi: 3.0.2
info:
  title: ASTM UAM PSU RIS API
  description: |-
    Interface definitions for communication between a UAS Service Supplier (USS) and a 
    Resource Information Service (RIS). This includes APIs for resource definition, resource 
    capacity, and resource status. 
  version: 0.0.0
servers: 
- url: /
security:
- Authority:
  - utm.resource_management
  - utm.resource_processing
  - utm.availability_arbitration
tags:
- name: Resource references
  description: Endpoints exposed by the RIS for details regarding resource references. 
- name: Resource capacities
  description: Endpoints exposed by the RIS for details regarding future resource capacities.
- name: Resource definition
  description: Endpoints exposed by the RIS for details regarding the physical definition and default capacity of a resource. 
- name: Resource status
  description: Endpoints exposed by the RIS for details regarding the current status and capacity of a resource. 
- name: Reports
  description: Endpoints exposed by the PSUs for reporting peer PSU issues.
- name: Availability
  description: Endpoints exposed by the DSS for declaring USS availability.


paths:
  /ris/v1/resource_details/{entityid}:
    summary: Query detailed information of a resource from RIS. 
    get:
      tags:
      - Resource references
      - Resource capacities
      - Resource definition
      - Resource status
      summary: Retrieve the specified resource details from an RIS.
      description: |-
        The RIS hosting this endpoint returns the details (and reference) of an
        resource it manages.
      operationId: getResourceDetailsChanged
      parameters:
      - name: entityid
        in: path
        description: EntityID for this resource.
        required: true
        style: simple
        explode: false
        schema:
          $ref: '../DSS/astm-uam-psu-dss-0.0.0.yaml#/components/schemas/EntityID'
      responses:
        "200":
          description: Operational intent details were retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResourceDetailsResponse'
        "400":
          description: One or more input parameters were missing or invalid.
          content:
            application/json:
              schema:
                $ref: '../DSS/astm-uam-psu-dss-0.0.0.yaml#/components/schemas/ErrorResponse'
        "401":
          description: "Bearer access token was not provided in Authorization header, token could not be decoded, or token was invalid."
          content:
            application/json:
              schema:
                $ref: '../DSS/astm-uam-psu-dss-0.0.0.yaml#/components/schemas/ErrorResponse'
        "403":
          description: The access token was decoded successfully but did not include a scope appropriate to this endpoint.
          content:
            application/json:
              schema:
                $ref: '../DSS/astm-uam-psu-dss-0.0.0.yaml#/components/schemas/ErrorResponse'
        "404":
          description: The requested Entity could not be found.
          content:
            application/json:
              schema:
                $ref: '../DSS/astm-uam-psu-dss-0.0.0.yaml#/components/schemas/ErrorResponse'
        "429":
          description: The client issued too many requests in a short period of time.
          content:
            application/json:
              schema:
                $ref: '../DSS/astm-uam-psu-dss-0.0.0.yaml#/components/schemas/ErrorResponse'
      security:
      - Authority:
        - utm.resource_processing
      - Authority:
        - utm.resource_management
  /ris/v1/resource_details/{entityid}/capacities:
    summary: Get future capacity details for the resource. 
    get:
      tags:
      - Resource capacities
      summary: Retrieve the specified resource capacity information from the RIS.
      operationId: getFutureResourceCapacities
      parameters:
      - name: entityid
        in: path
        description: EntityID of the resource.
        required: true
        style: simple
        explode: false
        schema:
          $ref: '../DSS/astm-uam-psu-dss-0.0.0.yaml#/components/schemas/EntityID'
      - name: begin_query_time
        in: query
        description: |-
          The time to begin the capacity query. If not provided, endpoint should assume NOW. 
        required: false
        style: simple
        explode: false
        $ref: '../DSS/astm-uam-psu-dss-0.0.0.yaml#/components/schemas/Time'
      - name: end_query_time
        in: query
        description: |-
          The time to end the capacity query. If not provided, all future
          capacities should be returned. 
        required: false
        style: simple
        explode: false
        $ref: '../DSS/astm-uam-psu-dss-0.0.0.yaml#/components/schemas/Time'
      responses:
        "200":
          description: List of future capacity details was retrieved successfully. 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryFutureCapacitiesResponse'
        "400":
          description: One or more input parameters were missing or invalid.
          content:
            application/json:
              schema:
                $ref: '../DSS/astm-uam-psu-dss-0.0.0.yaml#/components/schemas/ErrorResponse'
        "401":
          description: "Bearer access token was not provided in Authorization header, token could not be decoded, or token was invalid."
          content:
            application/json:
              schema:
                $ref: '../DSS/astm-uam-psu-dss-0.0.0.yaml#/components/schemas/ErrorResponse'
        "403":
          description: The access token was decoded successfully but did not include a scope appropriate to this endpoint.
          content:
            application/json:
              schema:
                $ref: '../DSS/astm-uam-psu-dss-0.0.0.yaml#/components/schemas/ErrorResponse'
        "404":
          description: The requested Entity could not be found.
          content:
            application/json:
              schema:
                $ref: '../DSS/astm-uam-psu-dss-0.0.0.yaml#/components/schemas/ErrorResponse'
        "429":
          description: The client issued too many requests in a short period of time.
          content:
            application/json:
              schema:
                $ref: '../DSS/astm-uam-psu-dss-0.0.0.yaml#/components/schemas/ErrorResponse'
      security:
      - Authority:
        - utm.resource_management
      - Authority:
        - utm.resource_processing
  /ris/v1/resource_details/{entityid}/status:
    summary: Get the current resource status 
    get:
      tags:
      - Resource status
      summary: Retrieve the current resource status from the RIS.
      operationId: getCurrentResourceStatus
      parameters:
      - name: entityid
        in: path
        description: EntityID of the resource.
        required: true
        style: simple
        explode: false
        schema:
          $ref: '../DSS/astm-uam-psu-dss-0.0.0.yaml#/components/schemas/EntityID'
      responses:
        "200":
          description: The current status of the resource. 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryCurrentResourceStatusResponse'
        "400":
          description: One or more input parameters were missing or invalid.
          content:
            application/json:
              schema:
                $ref: '../DSS/astm-uam-psu-dss-0.0.0.yaml#/components/schemas/ErrorResponse'
        "401":
          description: "Bearer access token was not provided in Authorization header, token could not be decoded, or token was invalid."
          content:
            application/json:
              schema:
                $ref: '../DSS/astm-uam-psu-dss-0.0.0.yaml#/components/schemas/ErrorResponse'
        "403":
          description: The access token was decoded successfully but did not include a scope appropriate to this endpoint.
          content:
            application/json:
              schema:
                $ref: '../DSS/astm-uam-psu-dss-0.0.0.yaml#/components/schemas/ErrorResponse'
        "404":
          description: The requested Entity could not be found.
          content:
            application/json:
              schema:
                $ref: '../DSS/astm-uam-psu-dss-0.0.0.yaml#/components/schemas/ErrorResponse'
        "429":
          description: The client issued too many requests in a short period of time.
          content:
            application/json:
              schema:
                $ref: '../DSS/astm-uam-psu-dss-0.0.0.yaml#/components/schemas/ErrorResponse'
      security:
      - Authority:
        - utm.resource_processing
      - Authority:
        - utm.resource_management
  /ris/v1/resource_details/{entityid}/definition:
    summary: Get the resource definition 
    get:
      tags:
      - Resource definition
      summary: Retrieve the resource definition from the RIS.
      operationId: getResourceDefinition
      parameters:
      - name: entityid
        in: path
        description: EntityID of the resource.
        required: true
        style: simple
        explode: false
        schema:
          $ref: '../DSS/astm-uam-psu-dss-0.0.0.yaml#/components/schemas/EntityID'
      responses:
        "200":
          description: The definition of the resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResourceDefinitionResponse'
        "400":
          description: One or more input parameters were missing or invalid.
          content:
            application/json:
              schema:
                $ref: '../DSS/astm-uam-psu-dss-0.0.0.yaml#/components/schemas/ErrorResponse'
        "401":
          description: "Bearer access token was not provided in Authorization header, token could not be decoded, or token was invalid."
          content:
            application/json:
              schema:
                $ref: '../DSS/astm-uam-psu-dss-0.0.0.yaml#/components/schemas/ErrorResponse'
        "403":
          description: The access token was decoded successfully but did not include a scope appropriate to this endpoint.
          content:
            application/json:
              schema:
                $ref: '../DSS/astm-uam-psu-dss-0.0.0.yaml#/components/schemas/ErrorResponse'
        "404":
          description: The requested Entity could not be found.
          content:
            application/json:
              schema:
                $ref: '../DSS/astm-uam-psu-dss-0.0.0.yaml#/components/schemas/ErrorResponse'
        "429":
          description: The client issued too many requests in a short period of time.
          content:
            application/json:
              schema:
                $ref: '../DSS/astm-uam-psu-dss-0.0.0.yaml#/components/schemas/ErrorResponse'
      security:
      - Authority:
        - utm.resource_processing
      - Authority:
        - utm.resource_management
  /ris/v1/reports:
    summary: Error reports of issues communicating with a peer PSU.
    post:
      tags:
      - Reports
      summary: Notify PSU of an error encountered that might otherwise go unnoticed.
      description: "Endpoint to provide feedback (errors, etc.) that might otherwise go unnoticed by this PSU.  This endpoint is used for all feedback related to operational intents and constraints."
      operationId: makePsuReport
      requestBody:
        content:
          application/json:
            schema:
              $ref: '../DSS/astm-uam-psu-dss-0.0.0.yaml#/components/schemas/ErrorReport'
        required: true
      responses:
        "201":
          description: Report received and successfully archived.
          content:
            application/json:
              schema:
                $ref: '../DSS/astm-uam-psu-dss-0.0.0.yaml#/components/schemas/ErrorReport'
        "400":
          description: |-
            * One or more parameters were missing or invalid.
            * The report could not be parsed, or contains unrecognized data.
          content:
            application/json:
              schema:
                $ref: '../DSS/astm-uam-psu-dss-0.0.0.yaml#/components/schemas/ErrorResponse'
        "401":
          description: |-
            Bearer access token was not provided in Authorization header,
            token could not be decoded, or token was invalid.
          content:
            application/json:
              schema:
                $ref: '../DSS/astm-uam-psu-dss-0.0.0.yaml#/components/schemas/ErrorResponse'
        "403":
          description: '* The access token was decoded successfully but did not include a scope appropriate to this endpoint.'
          content:
            application/json:
              schema:
                $ref: '../DSS/astm-uam-psu-dss-0.0.0.yaml#/components/schemas/ErrorResponse'
        "429":
          description: The client issued too many requests in a short period of time.
          content:
            application/json:
              schema:
                $ref: '../DSS/astm-uam-psu-dss-0.0.0.yaml#/components/schemas/ErrorResponse'
      security:
      - Authority:
        - utm.availability_arbitration
      - Authority:
        - utm.resource_management
      - Authority:
        - utm.resource_processing
  /ris/v1/uss_availability:
    summary: Share USS availability with users of the airspace. 
    post:
      tags:
      - Availability
      summary: Notify a peer of USS availability change.
      description: Notify a peer of USS availability change which has been reported by 
        a source with utm.availability_arbitration scope. 
      operationId: notifyAvailabilityArbitrationChange
      requestBody:
        content:
          application/json:
            schema:
              $ref: '../OIM/astm-uam-psu-oim-0.0.0.yaml#/components/schemas/PutUssAvailabilityDetails'
        required: true
      responses:
        "204":
          description: New or updated full operational intent information received successfully.
        "400":
          description: |-
            * One or more parameters were missing or invalid.
            * The Entity could not be parsed, or contains illegal data.
          content:
            application/json:
              schema:
                $ref: '../DSS/astm-uam-psu-dss-0.0.0.yaml#/components/schemas/ErrorResponse'
        "401":
          description: "Bearer access token was not provided in Authorization header, token could not be decoded, or token was invalid."
          content:
            application/json:
              schema:
                $ref: '../DSS/astm-uam-psu-dss-0.0.0.yaml#/components/schemas/ErrorResponse'
        "403":
          description: |-
            * The access token was decoded successfully but did not include a scope appropriate to this endpoint.
            * The client identified in the access token is not the manager of this Entity according to the receiving client's records.
          content:
            application/json:
              schema:
                $ref: '../DSS/astm-uam-psu-dss-0.0.0.yaml#/components/schemas/ErrorResponse'
        "409":
          description: |-
            The Entity version specified in this message is lower than
            a previously-received notification, or identical to a previously-received
            notification and the Entity is different.
          content:
            application/json:
              schema:
                $ref: '../DSS/astm-uam-psu-dss-0.0.0.yaml#/components/schemas/ErrorResponse'
        "429":
          description: The client issued too many requests in a short period of time.
          content:
            application/json:
              schema:
                $ref: '../DSS/astm-uam-psu-dss-0.0.0.yaml#/components/schemas/ErrorResponse'
      security:
      - Authority:
        - utm.availability_arbitration
components:
  schemas:
    ResourceShape:
      description: The physical shape of the resource.  This is not the same as the resource extent saved in the DSS. 
      oneOf:
        - $ref: '../DSS/astm-uam-psu-dss-0.0.0.yaml#/components/schemas/Circle'
        - $ref: '../DSS/astm-uam-psu-dss-0.0.0.yaml#/components/schemas/LatLngPoint'
        - $ref: '../DSS/astm-uam-psu-dss-0.0.0.yaml#/components/schemas/Polygon'
    ResourcePhysicalDefinition:
      required:
        - name
        - shape
        - type
      properties:
        name:
            description: Name of the resource
            example: CHIPR
            $ref: '../DSS/astm-uam-psu-dss-0.0.0.yaml#/components/schemas/TextShortType'
        shape:
          $ref: '#/components/schemas/ResourceShape'
        altitude_lower:
          description: Lower altitude limit of the resource, if any. 
          $ref: '../DSS/astm-uam-psu-dss-0.0.0.yaml#/components/schemas/Altitude'
        altitude_upper:
          description: Upper altitude limit of the resource, if any. 
          $ref: '../DSS/astm-uam-psu-dss-0.0.0.yaml#/components/schemas/Altitude'
        type:
          $ref: '#/components/schemas/ResourceType' 
    ResourceStatus:
      description: The current status of the resource. This status is independent of the resource capacity. No end time to the status is specified.
      required: 
        - status
      properties:
        status: 
          type: string
          description: The current status of the resource. 
          enum: 
          - ACTIVE
          - INACTIVE
    ResourceType:
      required: 
        - resource_type
      properties:
        resource_type: 
          type: string
          description: The type of resource.  
          enum: 
          - WAYPOINT
          - VOLUME
    CapacityLimitType:
      required:
        - capacity_type
      type: object
      properties:
        capacity_type:
          type: string
          description: |
            The type of capacity limitation which is to be met for the resource. 
            Types of capacity limitation at waypoint are:
            - FLOW_RATE_CONSTANT
              Constant time rate of separation.
            - FLOW_RATE_FIXED_BIN
              Capacity values for number of operations within a fixed time bin with duration in seconds. 
              - Fixed time bin should start at top-of-the-hour and evenly divide up an hour. For more details, see description for unit = seconds in CapacityPropertyType.
            - FLOW_RATE_ROLLING_BIN
              Capacity values for number of operations within a rolling time bin starting at end of previous time bin. Duration of time bin is in seconds in CapacityPropertyType. 
              - Rolling time bin does not necessarily start at top-of-the-hour.
            - INSTANTANEOUS
              The maximum number of operations that are permitted to occupy the resource at any time.
          externalDocs:
            url: TBD
          enum: 
          - FLOW_RATE_CONSTANT
          - FLOW_RATE_FIXED_BIN
          - FLOW_RATE_ROLLING_BIN
          - INSTANTANEOUS
    CapacityPropertyType:
      required:
        - capacity_property
        - capacity_value
      type: object
      properties:
        capacity_property:
          type: string
          description: |
            Property of the capacity check which must be met.
            - RATE describes the number of crossings (or events) allowed per time interval DURATION (seconds).
              Resources using RATE property must also specify a DURATION property. 
            - DURATION describes the length of a capacity bin or the interval duration (seconds). 
            - LIMIT describes the max aircraft allowed in either a time bin or instantaneously. If
              describing a time bin, the LIMIT and DURATION properties must both be provided.  
          externalDocs:
            url: TBD
          enum: 
          - DURATION
          - LIMIT
          - RATE
        capacity_value:
          type: number
          description: |-
            The number of flights allowed without exceeding the capacity limit.  This
            number represents the maximum capacity for the limit type. 
          minimum: 0
    ResourceCapacity:
      required:
      - capacity_limit_type
      - capacity_property_array
      properties:
        capacity_limit_type:
          $ref: "#/components/schemas/CapacityLimitType"
        capacity_property_array:
          minItems: 1
          maxItems: 2
          type: array
          description: |-
            Describes the properties of the capacity requirements defined for the resource.
          $ref: "#/components/schemas/CapacityPropertyType"
    PerformanceBound:
      description: Performance bounds for a resource indicate lateral, vertical, and time 
        bounds which must be met for an operational intent to remain conforming. 
      required:
        - maximum_altitude_deviation
        - maximum_lateral_deviation
        - maximum_time_deviation 
      properties: 
        maximum_time_deviation:
          description: The time buffer allowed from the expecting crossing or occupation time that is allowed in Seconds. 
          type: number
        maximum_altitude_deviation:
          description: The maximum allowed altitude deviation in feet. 
          type: number
        maximum_lateral_deviation:
          description: The maximum allowed lateral deviation in feet. 
          type: number
        min_altitude:
          description: The minimum allowed altitude for usage of this resource.
          $ref: '../DSS/astm-uam-psu-dss-0.0.0.yaml#/components/schemas/Altitude'
        max_altitude:
          description: The maximum allowed altitude for usage of this resource.
          $ref: '../DSS/astm-uam-psu-dss-0.0.0.yaml#/components/schemas/Altitude'
        min_speed:
          description: The minimum allowed speed for usage of this resource.
          $ref: '../DSS/astm-uam-psu-dss-0.0.0.yaml#/components/schemas/Velocity'
        max_speed:
          description: The maximum allowed speed for usage of this resource.
          $ref: '../DSS/astm-uam-psu-dss-0.0.0.yaml#/components/schemas/Velocity'
        radius:
          description: The maximum allowed radius for usage of this resource.
          $ref: '../DSS/astm-uam-psu-dss-0.0.0.yaml#/components/schemas/Radius'
        trajectory_interval_required:
          description: Specifies how frequently trajectory points are required to be
            provided when describing use of this resource, in seconds. 
          type: number
          format: integer 
        performance_bound_start_time:
          description: The time at which the performance bound start, if known. 
          anyOf:
          - $ref: '../DSS/astm-uam-psu-dss-0.0.0.yaml#/components/schemas/Time'
        performance_bound_end_time:
          description: The time at which the performance bound ends, if known. 
            If not provided, the performance bound continues indefinitely. 
          anyOf:
          - $ref: '../DSS/astm-uam-psu-dss-0.0.0.yaml#/components/schemas/Time'
    TemporaryResourceCapacity:
      required: 
        - id
        - resource_capacity
        - capacity_start_time
      description: |-
        A temporary resource capacity which overrides the default Resource Capacity. 
      properties:
        id:
          description: |- 
            A unique identifier for this temporary change to the default resource capacity.  Included
            to allow for future updates (ex. adding an end time) to an existing temporary capacity change. 
          $ref: '../DSS/astm-uam-psu-dss-0.0.0.yaml#/components/schemas/EntityID'
        resource_capacity:
          $ref: "#/components/schemas/ResourceCapacity"
        capacity_start_time:
          description: The time at which the updated resource capacity begins. 
          anyOf:
          - $ref: '../DSS/astm-uam-psu-dss-0.0.0.yaml#/components/schemas/Time'
        capacity_end_time:
          description: The time at which the updated resource capacity ends, if known. 
            If not provided, the temporary capacity continues indefinitely. 
          anyOf:
          - $ref: '../DSS/astm-uam-psu-dss-0.0.0.yaml#/components/schemas/Time'
    ActiveResourceCapacity:
      required: 
        - resource_capacity
      description: |-
        The current resource capacity requirement in place. This may be a default or a 
        temporary capacity requirement. 
      properties:
        resource_capacity:
          $ref: "#/components/schemas/ResourceCapacity"
        capacity_end_time:
          description: The time at which the updated resource capacity ends, if known. 
            If not provided, the current capacity continues indefinitely. 
          anyOf:
          - $ref: '../DSS/astm-uam-psu-dss-0.0.0.yaml#/components/schemas/Time'
    CurrentResourceStatus:
      required:
        - status
        - active_capacity
        - performance_bound
      description: |-
        Returns the current resource status, active capacity and resource performance bound. 
      properties:
        status: 
          $ref: '#/components/schemas/ResourceStatus'
        active_capacity:
          $ref: '#/components/schemas/ActiveResourceCapacity'
        performance_bound:
          $ref: '#/components/schemas/PerformanceBound'
    ResourceDetails:
      required:
        - resource_reference
        - definition
        - current_resource_status
        - future_capacities
      properties:
        resource_reference:
          description: |-
            Full information about the resource reference that has changed.  If this field is omitted,
            the resource was deleted.  The `ovn` field in the nested `reference` must be
            populated.
          anyOf:
          - $ref: '../DSS/astm-uam-psu-dss-0.0.0.yaml#/components/schemas/ResourceReference'
        definition:
          $ref: '#/components/schemas/ResourceDefinition'
        current_resource_status:
          $ref: '#/components/schemas/CurrentResourceStatus'
        future_capacities:
          type: array
          description: |-
            An array of future resource capacities, excluding the current active capacity and its end/transition back to the default capacity.
            The current active capacity and its end/transition back to the default capacity is defined by the CurrentResourceStatus ActiveResourceCapacity.
          items: 
            $ref: '#/components/schemas/TemporaryResourceCapacity'
          default: []
    QueryResourceDetailsResponse:
      required:
      - resource_details
      type: object
      properties:
        resource_details:
          $ref: '#/components/schemas/ResourceDetails'
      description: Response to peer request for the details of resource with the given ID.
    QueryResourceDefinitionResponse:
      required:
      - definition
      type: object
      properties:
        definition:
          $ref: '#/components/schemas/ResourceDefinition'
      description: Response to peer request for the resource definition of the resource with the given ID.
    ResourceDefinition:
      required:
      - physical_definition
      - default_capacity
      type: object
      properties:
        physical_definition:
          $ref: '#/components/schemas/ResourcePhysicalDefinition'
        default_capacity:
          $ref: '#/components/schemas/ResourceCapacity'
        performance_bound:
          $ref: '#/components/schemas/PerformanceBound'
      description: Response to peer request for the resource definition of the resource with the given ID.
    QueryCurrentResourceStatusResponse:
      description: Returns the current status of the resource. 
      type: object
      required:
        - current_resource_status
      properties:
        current_resource_status:
          $ref: "#/components/schemas/CurrentResourceStatus"
    QueryFutureCapacitiesResponse:
      description: Return a list temporary capacities for the future. 
      type: object
      required: 
        - future_capacities
      properties:
        future_capacities:
          description: An array of future resource capacities, excluding the current active capacity and its end/transition back to the default capacity.
            The current active capacity and its end/transition back to the default capacity is defined by the CurrentResourceStatus ActiveResourceCapacity.
          type: array
          items: 
            $ref: '#/components/schemas/TemporaryResourceCapacity'
          default: []


