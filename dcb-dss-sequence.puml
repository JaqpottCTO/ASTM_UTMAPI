@startuml DCB-DSS
participant "Web Client" as wc
participant "OIM/PSU" as op
participant "DCB" as dcb
participant "DSS" as dss
participant "OIM/PSU 2" as op2
participant "OIM/PSU n" as opn
participant "Resource Service" as rs
participant "CFM Gateway" as cg
participant "TFMS" as tfms

==New Operation Request==
dcb -[#green]> dss: PUT /subscriptions/{subscriptionid} 

op2 -[#green]> dss: PUT /subscriptions/{subscriptionid} 
activate op2
activate dss
dss -[#green]> op2: (subscribers)
deactivate dss
op2 -[#red]> dss: POST  /v1/operational_intents
deactivate op2

opn -[#green]> dss: PUT /subscriptions/{subscriptionid} 
activate opn
activate dss
dss -[#green]> opn: (subscribers)
deactivate dss
opn -[#red]> dss: POST  /v1/operational_intents
deactivate opn

tfms -[#purple]> rs: POST dcb/v2/imbalance/intent

wc -> op: Op Request
op -[#blue]> dcb: POST dcb/v2/imbalance/intent
activate dcb
loop each waypoint of the op intent
    dcb -[#purple]> rs: GET
end
dcb -[#blue]> op: response\n(includes OVNs for all ops that\ncontributed to the demand calculation)
deactivate dcb

alt If imbalance detected
    op -> op: Delay all points by [config value] min.\nReattempt POST /intent to DCB
else If no imbalance detected
    op -[#green]> dss: PUT /operational_intent_references/{entityid}\n(Includes OVNs in key field)
    activate dss
    dss -[#green]> op: subscribers
    deactivate dss
    loop POST updates to subscribers
        op -[#red]> op2: POST /v1/operational_intents
    end
end

op -> wc: Op Request Response
op2 -[#red]> op: GET /v1/operational_intents/{entityid}

==Operation Update==
wc -> op: Op Update Request
op -[#blue]> dcb: POST dcb/v2/imbalance/intent
activate dcb
dcb -[#blue]> op: response\n(includes OVNs for all ops that\ncontributed to the demand calculation)
deactivate dcb

alt If imbalance detected
    note over op: Do not update the operation
else If no imbalance detected
    op -[#green]> dss: PUT /operational_intent_references/{entityid}\n(Includes OVNs in key field)
    activate dss
    dss -[#green]> op: subscribers
    deactivate dss
    loop POST updates to subscribers
        op -[#red]> op2: POST /v1/operational_intents
    end
end

op -> wc: Op Request Response


==Telemetry Sharing==
note left of wc: Serving to External PSUs
op2 -[#green]> op: GET operational_intents/{entityid}/telemetry

note left of wc: Requesting from External PSUs
op2 -[#red]> op: POST /v1/operational_intents

alt If Operation in Activated, Nonconforming, Contingent States
    loop 
        op -[#green]> op2: GET operational_intents/{entityid}/telemetry        
    end
else If Operation deleted
    note over op: Stop retrieving telemetry
end 
