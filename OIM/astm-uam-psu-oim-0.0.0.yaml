openapi: 3.1.1
info:
  title: ASTM UAM PSU OIM API
  description: "Interface definitions for the Operational Intent Management function within the Providers of Services to UAM (PSU)\ninteroperability network. Functionality includes sharing details of flight operational intents.\n "
  version: 0.0.0
servers:
- url: /
security:
- Authority:
  - utm.strategic_coordination
- Authority:
  - utm.conformance_monitoring_sa
- Authority:
  - utm.resource_management
- Authority:
  - utm.resource_processing
- Authority:
  - utm.availability_arbitration
 
tags:
- name: Operational intent details
  description: Endpoints exposed by PSU OIMs for interaction with details of operational intents.
- name: Telemetry
- name: Reports
  description: Endpoints exposed by the PSUs for reporting peer PSU issues.
- name: Availability
  description: Endpoints exposed by the DSS for declaring USS availability.
- name: p2p_uam
  description: Endpoints exposed by PSUs for peer-peer communication.
paths:
  /oim/v1/operational_intents/{entityid}:
    summary: Query detailed information of an operational intent from a PSU.
    get:
      tags:
      - Operational intent details
      - p2p_uam
      summary: Retrieve the specified operational intent details from a PSU.
      description: |-
        The PSU hosting this endpoint returns the details (and reference) of an
        operational intent it manages.  While the PSU has a pending request to change the
        operational intent in the DSS, the PSU should report the most recent version the
        PSU knows was accepted by the DSS.  So, before a PSU receives a response
        to create an operational intent reference in the DSS, it should return 404 if
        queried for that operational intent at this endpoint.
      operationId: getOperationalIntentDetails
      parameters:
      - name: entityid
        in: path
        description: EntityID for this operational intent.
        required: true
        style: simple
        explode: false
        schema:
          $ref: '../DSS/astm-uam-psu-dss-0.0.0.yaml#/components/schemas/EntityID'
      responses:
        "200":
          description: Operational intent details were retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOperationalIntentDetailsResponse'
        "400":
          description: One or more input parameters were missing or invalid.
          content:
            application/json:
              schema:
                $ref: '../shared-components/schemas.yaml#/components/schemas/ErrorResponse'
        "401":
          description: "Bearer access token was not provided in Authorization header, token could not be decoded, or token was invalid."
          content:
            application/json:
              schema:
                $ref: '../shared-components/schemas.yaml#/components/schemas/ErrorResponse'
        "403":
          description: The access token was decoded successfully but did not include a scope appropriate to this endpoint.
          content:
            application/json:
              schema:
                $ref: '../shared-components/schemas.yaml#/components/schemas/ErrorResponse'
        "404":
          description: The requested Entity could not be found.
          content:
            application/json:
              schema:
                $ref: '../shared-components/schemas.yaml#/components/schemas/ErrorResponse'
        "429":
          description: The client issued too many requests in a short period of time.
          content:
            application/json:
              schema:
                $ref: '../shared-components/schemas.yaml#/components/schemas/ErrorResponse'
      security:
      - Authority:
        - utm.strategic_coordination
      - Authority:
        - utm.resource_management
  /oim/v1/conformance_alert/{entityid}:
    summary: |-
      endpoint hosted by OIM to allow CM to provide conformance monitoring alerts including for
      when an operation is detected to be taking off, when it is detected to be non conformant
      and when it is detected to be conformant after a nonconformance. This will usually required
      a change of state for teh operation by the OIM in the DSS
    put:
      tags:
      - Telemetry
      - p2p_uam
      summary: Alert a peer PSU by conformance monitoring.
      description: Notify a peer PSU directly with a conformance monitoring alert (usually requiring a change of state by the OIM in the DSS).
      operationId: notifyConformanceAlert
      parameters:
      - name: entityid
        in: path
        description: EntityID for the impacted operation.
        required: true
        style: simple
        explode: false
        schema:
          $ref: '../DSS/astm-uam-psu-dss-0.0.0.yaml#/components/schemas/EntityID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutConformanceAlert'
        required: true
      responses:
        "204":
          description: New or updated full resource information received successfully.
        "400":
          description: |-
            * One or more parameters were missing or invalid.
            * The Entity could not be parsed, or contains illegal data.
          content:
            application/json:
              schema:
                $ref: '../shared-components/schemas.yaml#/components/schemas/ErrorResponse'
        "401":
          description: "Bearer access token was not provided in Authorization header, token could not be decoded, or token was invalid."
          content:
            application/json:
              schema:
                $ref: '../shared-components/schemas.yaml#/components/schemas/ErrorResponse'
        "403":
          description: |-
            * The access token was decoded successfully but did not include a scope appropriate to this endpoint.
            * The client identified in the access token is not the manager of this Entity according to the receiving client's records.
          content:
            application/json:
              schema:
                $ref: '../shared-components/schemas.yaml#/components/schemas/ErrorResponse'
        "409":
          description: |-
            The Entity version specified in this message is lower than
            a previously-received notification, or identical to a previously-received
            notification and the Entity is different.
          content:
            application/json:
              schema:
                $ref: '../shared-components/schemas.yaml#/components/schemas/ErrorResponse'
        "429":
          description: The client issued too many requests in a short period of time.
          content:
            application/json:
              schema:
                $ref: '../shared-components/schemas.yaml#/components/schemas/ErrorResponse'
      security:
      - Authority:
        - utm.conformance_monitoring_sa

  /oim/v1/reports:
    summary: Error reports of issues communicating with a peer PSU.
    post:
      $ref: '../shared-components/pathitems.yaml#/components/pathItems/path_ErrorReport/post'

  /oim/v1/uss_availability:
    summary: Share USS availability with users of the airspace. 
    post:
      $ref: '../shared-components/pathitems.yaml#/components/pathItems/path_Availability/post'

  /oim/v1/imbalance:
    summary: Submit details about a detected resource demand capacity imbalance
      to the OIM which manages the operation. 
    post:
      tags:
      - Imbalance monitoring 
      summary: Notify an OIM of a demand capacity balance which for which their operation 
        is contributing. 
      description: Notify an OIM of a demand capacity balance which for which their operation 
        is contributing. 
      operationId: notifyDCBImbalanceParticipant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '../DCB/astm-uam-psu-dcb-0.0.0.yaml#/components/schemas/ImbalanceResponse'
        required: true
      responses:
        "204":
          description: DCB imbalance information received successfully.
        "400":
          description: |-
            * One or more parameters were missing or invalid.
            * The Entity could not be parsed, or contains illegal data.
          content:
            application/json:
              schema:
                $ref: '../shared-components/schemas.yaml#/components/schemas/ErrorResponse'
        "401":
          description: "Bearer access token was not provided in Authorization header, token could not be decoded, or token was invalid."
          content:
            application/json:
              schema:
                $ref: '../shared-components/schemas.yaml#/components/schemas/ErrorResponse'
        "403":
          description: |-
            * The access token was decoded successfully but did not include a scope appropriate to this endpoint.
            * The client identified in the access token is not the manager of this Entity according to the receiving client's records.
          content:
            application/json:
              schema:
                $ref: '../shared-components/schemas.yaml#/components/schemas/ErrorResponse'
        "409":
          description: |-
            The Entity version specified in this message is lower than
            a previously-received notification, or identical to a previously-received
            notification and the Entity is different.
          content:
            application/json:
              schema:
                $ref: '../shared-components/schemas.yaml#/components/schemas/ErrorResponse'
        "429":
          description: The client issued too many requests in a short period of time.
          content:
            application/json:
              schema:
                $ref: '../shared-components/schemas.yaml#/components/schemas/ErrorResponse'
      security:
      - Authority:
        - utm.strategic_coordination
  /oim/v1/extent_update:
    summary: Submit updated resource extents and trajectory back to OIM from DCB. This endpoint
      will be called in the case where a new resource is created or the physical definition
      of a resource is updating causing a flight's shared resource extents and trajectory to 
      be out of date.  This endpoint returns the same data as an imbalance intent request 
      on the DCB.  It indicates if the flight is DCB compliant or not (after the change), 
      provides details about imbalances, and also provides the updated resource extents and
      supplemental trajectory for updates to the DSS and other OIMs. 
    post:
      tags:
      - Imbalance monitoring 
      summary: Notify an OIM that the resource interaction of their existing operational intent
        is out of date and must be updated. 
      description: Notify an OIM that the resource interaction of their existing operational intent
        is out of date and must be updated. 
      operationId: notifyExtentsRequireUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '../DCB/astm-uam-psu-dcb-0.0.0.yaml#/components/schemas/ExtentUpdateRequest'
        required: true
      responses:
        "204":
          description: Extent update information received successfully.
        "400":
          description: |-
            * One or more parameters were missing or invalid.
            * The Entity could not be parsed, or contains illegal data.
          content:
            application/json:
              schema:
                $ref: '../shared-components/schemas.yaml#/components/schemas/ErrorResponse'
        "401":
          description: "Bearer access token was not provided in Authorization header, token could not be decoded, or token was invalid."
          content:
            application/json:
              schema:
                $ref: '../shared-components/schemas.yaml#/components/schemas/ErrorResponse'
        "403":
          description: |-
            * The access token was decoded successfully but did not include a scope appropriate to this endpoint.
            * The client identified in the access token is not the manager of this Entity according to the receiving client's records.
          content:
            application/json:
              schema:
                $ref: '../shared-components/schemas.yaml#/components/schemas/ErrorResponse'
        "409":
          description: |-
            The Entity version specified in this message is lower than
            a previously-received notification, or identical to a previously-received
            notification and the Entity is different.
          content:
            application/json:
              schema:
                $ref: '../shared-components/schemas.yaml#/components/schemas/ErrorResponse'
        "429":
          description: The client issued too many requests in a short period of time.
          content:
            application/json:
              schema:
                $ref: '../shared-components/schemas.yaml#/components/schemas/ErrorResponse'
      security:
      - Authority:
        - utm.strategic_coordination
  /oim/v1/log_sets/{log_set_id}:
    summary: General summary
    parameters:
    - name: log_set_id
      description: >-
        USS-defined identifier for a set of log entries.  For instance, this
        ID may refer to all logs associated with a particular reportable
        incident, or over a time range for the purpose of metric computation.
      schema:
        type: string
      in: path
      required: true
      example: com.example.incident.20200107.v4
    get:
      tags:
      - Logging
      summary: Get PSU logs
      operationId: getPSULogSet
      description: >-
        A PSU will not usually implement this endpoint directly, but rather will
        be capable of exporting log data in a format equivalent to the response
        format of this pseudo-endpoint according to the requirements of the
        standard.
      responses:
        '200':
          description: Log data successfully retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PSULogSet'
components:
  securitySchemes:
    $ref: '../shared-components/schemas.yaml#/components/securitySchemes'

  schemas:
    Trajectory:
      maxItems: 1000
      minItems: 2
      type: array
      description: |- 
        The list of TrajectoryPoints for this operation.  This list must contain all significant TrajectoryPoints per the CBRs. 
        Pre-flight, this list must contain all trajectory flights.  If updated during the flight, only the current trajectory
        point to the destination should be included. 
        For additional insight on points to be included, see the enumeration of property types in the TrajectoryPoint4D model."
      items:
        $ref: '#/components/schemas/TrajectoryPoint4D' 
    Volumes:
      type: array
      description: |-
        Volumes that wholly contain the operational intent while being as small as practical.
        Start and end times, as well as lower and upper altitudes, are required for each volume. The end time may not be in the past.
        May not contain any items when the operational intent is Contingent.
      items:
        $ref: '../DSS/astm-uam-psu-dss-0.0.0.yaml#/components/schemas/Volume4D'
      default: []   
    OperationalIntentDetails:
      required:
      - intent
      type: object
      properties:
        aircraft_registration:
          maxLength: 7
          minLength: 1
          pattern: "[A-Z0-9]{1,7}"
          type: string
          description: |
            A unique, alphanumeric string that identifies a civil aircraft and consists of the Aircraft
            Nationality or Common Mark and an additional alphanumeric string, the registration mark,
            assigned by the state of registry or common mark registering authority. [FIXM]
          externalDocs:
            description: See FIXM 4.2.0 for further information.
            url: https://fixm.aero/releases/FIXM-4.2.0/doc/schema_documentation/Fixm_AircraftRegistrationType.html#LinkBC
          x-uam-data-accessibility: PUBLIC
        operator_name:
          pattern: "[A-Z]{3}"
          type: string
          description: "The identifier of the UAM Operator. Required if different than the PSU. For X4 this can be any code that meets the required pattern, and does not need to be an ICAO Airline Code.​"
          example: AAL
          externalDocs:
            description: See FIXM 4.2.0 for further information.
            url: https://www.fixm.aero/releases/FIXM-4.2.0/doc/schema_documentation/Fixm_AircraftOperatorType.html#Link1E3
        intent:
          oneOf:
            - $ref: "#/components/schemas/Trajectory"
            - $ref: "#/components/schemas/Volumes"
        off_nominal_volumes:
          type: array
          description: |-
            Volumes that contain the anticipated area of non-conformance while the aircraft is in the Nonconforming or Contingent states.
            Start and end times, as well as lower and upper altitudes, are required for each volume. The end time may not be in the past.
            Required with at least one item when the operational intent is Nonconforming or Contingent.
            May not contain any items when the operational intent is Proposed, Accepted, Activated or DCB-Noncompliant.
          items:
            $ref: '../DSS/astm-uam-psu-dss-0.0.0.yaml#/components/schemas/Volume4D'
          default: []
        priority:
          $ref: '#/components/schemas/Priority'
      description: Details of a UAM operational intent. Note that this data is not stored in the DSS; only with the clients.
    Priority:
      type: integer
      description: "Ordinal priority of the operational intent, as defined by the regulator.  Operational intents with lesser values are lower priority than all operational intents with greater values.  A lower-priority operational intent may not create a conflict with a higher-priority operational intent.  A higher-priority operational intent may create a conflict with a lower-priority operational intent.  The regulator specifies whether an operational intent may create a conflict with other operational intents of the same priority."
      default: 0
    OperationalIntent:
      required:
      - details
      - reference
      type: object
      properties:
        reference:
          $ref: '../DSS/astm-uam-psu-dss-0.0.0.yaml#/components/schemas/OperationalIntentReference'
        details:
          $ref: '#/components/schemas/OperationalIntentDetails'
      description: Full description of a UAM operational intent.
    GetOperationalIntentDetailsResponse:
      required:
      - operational_intent
      type: object
      properties:
        operational_intent:
          $ref: '#/components/schemas/OperationalIntent'
      description: Response to peer request for the details of operational intent with the given ID.
    GetOperationalIntentTelemetryResponse:
      required:
      - operational_intent_id
      - telemetry
      type: object
      properties:
        operational_intent_id:
          description: ID of the operational intent which the vehicle reporting telemetry is flying.
          $ref: '../DSS/astm-uam-psu-dss-0.0.0.yaml#/components/schemas/EntityID'
        telemetry:
          $ref: '../DSS/astm-uam-psu-dss-0.0.0.yaml#/components/schemas/VehicleTelemetry'
        next_telemetry_opportunity:
          description: |-
            The next telemetry similar to this telemetry is not expected to be
            available until at or after this time, so the polling PSU should
            generally not poll the endpoint providing this response data again
            until at or after that time.  If this field is omitted, then there
            is no current expectation of new telemetry becoming available.
          $ref: '../shared-components/schemas.yaml#/components/schemas/Time'
      description: Response to a peer request for telemetry of an operational intent.
    ResourceEventType:
      type: string
      description: Describes if the trajectory point is a resource crossing or the beginning or end
        of resource usage. 
      enum:
        - RESOURCE_ENTRY
        - RESOURCE_EXIT
        - RESOURCE_CROSSING
    ResourceUsage:
      required:
        - resource_id
        - resource_event
      properties:
        resource_id:
          description: |-
            The ID of the resource being referenced by the trajectory property array.
            Required when crossing a waypoint-based resource or entering/exiting a 
            volume-based resource. 
          $ref: '../DSS/astm-uam-psu-dss-0.0.0.yaml#/components/schemas/EntityID'
        resource_event:
          description: Describes if the trajectory point is a resource crossing or the beginning or end
            of resource usage. 
          $ref: '#/components/schemas/ResourceEventType'
    TrajectoryPoint4D:
      required:
      - altitude
      - lat_lng_point
      - speed
      - time
      - trajectory_property_array
      - resource_usage
      type: object
      properties:  
        # TODO: Do we still need point_designator? Seems like this is replaced by the resource_id
        # point_designator:
        #   type: string
        #   description: "The name of the designated point. This is required for all named airspace structure point from ASDS, including vertipads."
        #   example: ee123
        lat_lng_point:
          description: "Latitude and Longitude of the point. If this is for a named airspace structure point from ASDS, it should be the same value as from ASDS."
          $ref: '../DSS/astm-uam-psu-dss-0.0.0.yaml#/components/schemas/LatLngPoint'
        altitude:
          description: "Altitude of the point. If this is for a named airspace structure point from ASDS, it should be the same value as from ASDS."
          $ref: '../DSS/astm-uam-psu-dss-0.0.0.yaml#/components/schemas/Altitude'
        time:
          description: Estimated time when the vehicle will be at the location of the TrajectoryPoint
          $ref: '../shared-components/schemas.yaml#/components/schemas/Time'
        speed:
          description: |-
            Speed of the vehicle at this TrajectoryPoint.
            FIXM allows for two speed entries:  predictedAirspeed and predictedGroundspeed
          $ref: '../DSS/astm-uam-psu-dss-0.0.0.yaml#/components/schemas/Velocity'
        trajectory_property_array:
          maxItems: 4
          minItems: 1
          type: array
          description: |-
            Describes any applicable properties of the trajectory point.
            May include multiple properties per point. FIXM allows up to 2000 properties per trajectory point.
            Pre-flight, the entire trajectory should be provided. If the trajectory is updated
            during flight, only the current & future trajectory points should be provided. 
            The first point of a pre-flight trajectory must include at a minimum: AIRPORT_REFERENCE_LOCATION, WHEELS_OFF
            The last point must include at a minimum: AIRPORT_REFERENCE_LOCATION, WHEELS_ON
          externalDocs:
            url: https://fixm.aero/releases/FIXM-4.2.0/doc/schema_documentation/Fixm_TrajectoryPoint4DType.html#Link2AC
          items:
            $ref: '#/components/schemas/TrajectoryProperty'
        resource_usage:
          type: array
          description: If this trajectory point describes a resource crossing or entry/exit, the resource and the event type
            must be included. If no resource is used this array is empty.
          items: 
            $ref: '#/components/schemas/ResourceUsage'
      description: |
        A point for use within a planned trajectory.
        Tolerance around the point is standardized, and will be applicable
        to all operations in a given area.

        Currently Flight Rule is not expected to change during an operation. If it does, the
        following may be added as a new property:
          https://fixm.aero/releases/FIXM-4.2.0/doc/schema_documentation/Fixm_RouteTrajectoryElementType.html#Link2A3
      externalDocs:
        description: See FIXM 4.2.0 for further information.
        url: https://www.fixm.aero/releases/FIXM-4.2.0/doc/schema_documentation/Fixm_TrajectoryPoint4DType.html#Link116
    TrajectoryProperty:
      required:
      - property_type
      type: object
      properties:
        property_type:
          type: string
          description: |
            Provides the type of trajectory point property. Enum list is based on the FIXM definition
            of TrajectoryPointPropertyType.
          externalDocs:
            description: FIXM definition of TrajectoryPointPropertyType
            url: https://fixm.aero/releases/FIXM-4.2.0/doc/schema_documentation/Fixm_TrajectoryPointPropertyType.html#Link2B0
          enum:
          - TOP_OF_CLIMB
          - TOP_OF_DESCENT
          - TRAJECTORY_CHANGE_POINT_VERTICAL
          - TRAJECTORY_CHANGE_POINT_SPEED
          - TRAJECTORY_CHANGE_POINT_LATERAL
          - WHEELS_OFF
          - WHEELS_ON
          - AIRPORT_REFERENCE_LOCATION
      description: Describes any applicable properties of the trajectory point.
    PutConformanceAlert:
      description: |-
        Parameters for an alert about an operation from the CM role. 
      required:
      - alert
      type: object
      properties:
        alert:
          type: string
          description: |-
            Alert about an operation from the CM role.
            'Takeoff': Tracking information has been received indicating that the aircraft has taken off
            'Nonconforming': Tracking information has been received indicating that the aircraft is no longer in conformance with its coordinated (activated or DCB-Noncompliant) operational intent
            'Reconforming': Tracking information has been received indicating that the aircraft is in conformance with its coordinated (activated or DCB-Noncompliant) operational intent after being nonconforming. 
              Reconformance may be because the operation has regained conformance with its previously coordinated operational intent or because the intent has been updated.
          enum:
          - Takeoff
          - Nonconforming
          - Reconforming
    PSULogSet:
      type: object
      description: >-
        The set of log data fulfilling this standard's Logging requirements.
      properties:
        messages:
          description: >-
            Outgoing messages sent to other PSUs and the DSS, and incoming
            messages received from other PSUs, including instances where an
            expected response to a request is not received.
          type: array
          items:
            $ref: '../shared-components/schemas.yaml#/components/schemas/ExchangeRecord'
          default: [ ]
        operator_notifications:
          description: >-
            Instances of operator notifications as specifically required within
            this standard.
          type: array
          items:
            $ref: '#/components/schemas/UserNotificationRecord'
          default: [ ]
        operator_inputs:
          description: >-
            Instances of operator input as specifically required within this
            standard.
          type: array
          items:
            $ref: '#/components/schemas/UserInputRecord'
          default: [ ]
        operator_associations:
          description: >-
            For a PSU that manages operational intents, associations of an
            operator with operational intents that transitioned to the Accepted
            state.
          type: array
          items:
            $ref: '#/components/schemas/OperatorAssociation'
          default: [ ]
        planning_attempts:
          description: >-
            For a PSU that manages operational intents, instances where an
            operational intent could not be planned or replanned due to
            conflicts with other operational intents or constraints.
          type: array
          items:
            $ref: '#/components/schemas/PlanningRecord'
          default: [ ]
        operational_intent_positions:
          description: >-
            For a PSU performing conformance monitoring, all position data used
            for conformance monitoring that is ingested from the UA.
          type: array
          items:
            $ref: '#/components/schemas/OperationalIntentPositions'
          default: [ ]
    PositionRecord:
      required:
      - telemetry
      - time_received
      type: object
      properties:
        time_received:
          description: Time that this position data was received by the USS
          $ref: '../shared-components/schemas.yaml#/components/schemas/Time'
        telemetry:
          $ref: '../DSS/astm-uam-psu-dss-0.0.0.yaml#/components/schemas/VehicleTelemetry'
      description: A record of vehicle telemetry information received by this USS (typically for conformance monitoring).
    OperationalIntentPositions:
      required:
      - operational_intent_id
      type: object
      properties:
        positions:
          type: array
          items:
            $ref: '#/components/schemas/PositionRecord'
          default: []
        operational_intent_id:
          description: ID of the operational intent associated with `positions`
          $ref: '../DSS/astm-uam-psu-dss-0.0.0.yaml#/components/schemas/EntityID'
      description: A record of position data gathered through the course of an operational intent
    PlanningRecord:
      required:
      - ovns
      - time
      type: object
      properties:
        time:
          description: Time that this planning event occurred
          $ref: '../shared-components/schemas.yaml#/components/schemas/Time'
        ovns:
          type: array
          description: OVNs the planning USS was aware of when it was planning the operational intent
          items:
            $ref: '../DSS/astm-uam-psu-dss-0.0.0.yaml#/components/schemas/EntityOVN'
          default: []
        missing_operational_intents:
          type: array
          description: List of missing operational intents (for planning attempts that were denied by the DSS with code 409)
          items:
            $ref: '../DSS/astm-uam-psu-dss-0.0.0.yaml#/components/schemas/EntityID'
          default: []
        missing_resources:
          type: array
          description: List of missing resources (for planning attempts that were denied by the DSS with code 409)
          items:
            $ref: '../DSS/astm-uam-psu-dss-0.0.0.yaml#/components/schemas/EntityID'
          default: []
        operational_intent_id:
          description: ID of the operational intent being planned
          $ref: '../DSS/astm-uam-psu-dss-0.0.0.yaml#/components/schemas/EntityID'
        problem:
          type: string
          description: A free text description of the problem(s) encountered during this planning attempt.
      description: A record of a single attempt to (successfully or unsuccessfully) create or modify an operational intent.
    UserNotificationRecord:
      required:
      - notification_time
      - notification_triggering_event
      - triggering_event_time
      type: object
      properties:
        triggering_event_time:
          description: Time of the notification triggering event
          $ref: '../shared-components/schemas.yaml#/components/schemas/Time'
        notification_time:
          description: Time at which the user was notified
          $ref: '../shared-components/schemas.yaml#/components/schemas/Time'
        notification_details:
          type: string
          description: "Description of information that was provided to the user, as per the referenced notification_triggering_event requirement"
        notification_triggering_event:
          type: string
          description: Requirement ID that pertains to the given notification
          enum:
          - GEN0400
          - GEN0410
          - ACM0020
          - ACM0040
      description: User notification record.
    UserInputRecord:
      required:
      - input_triggering_event
      - operational_intent_id
      - triggering_event_time
      type: object
      properties:
        triggering_event_time:
          description: Time in which user input was received by the USS
          $ref: '../shared-components/schemas.yaml#/components/schemas/Time'
        operational_intent_id:
          description: ID of the operational_intent ID pertaining to the user input
          $ref: '../DSS/astm-uam-psu-dss-0.0.0.yaml#/components/schemas/EntityID'
        input_triggering_event:
          type: string
          description: Requirement ID that pertains to the given notification
          enum:
          - CM0030
          - CM0040
          - CM0045
          - CM0035
        input_details:
          type: string
          description: "Description of the information that was provided by the user, as per the referenced input_triggering_event requirement"
      description: User input record
    OperatorAssociation:
      required:
      - operational_intent_id
      - operator_id
      type: object
      properties:
        operational_intent_id:
          description: ID of operational intent to which this association pertains
          $ref: '../DSS/astm-uam-psu-dss-0.0.0.yaml#/components/schemas/EntityID'
        operator_id:
          type: string
          description: Unique identifier of the operator responsible for the operational intent
      description: Association between an operational intent and the operator of that operational intent